*** ESP-NOW NOTES ***

official docs: https://docs.espressif.com/projects/esp-idf/en/stable/esp32/api-reference/network/esp_now.html#_CPPv412esp_now_sendPK7uint8_tPK7uint8_t6size_t

- set up wifi before using the protocol
- deinitialize esp-now then wifi module
- initialization through esp_now_init()
- de-initialization throgh esp_now_deinit()
- association with another device through esp_now_add_peer() (max 20 devices)
- data tx using esp_now_send(), esp_now_register_send_cb() for callback function; see details for possible errors
- to receive data use esp_now_register_recv_cb(); it is needed a callback function also for reception of data
- callback functions => useful for knowing with message is sent/received correctly or not


- headers to include: "esp_wifi.h", "esp_now.h"

*** WIFI SETUP ***

official docs: https://docs.espressif.com/projects/esp-idf/en/stable/esp32s3/api-guides/wifi.html#esp32-s3-wi-fi-station-scenario-general

- interfaces:
	* STA -> station, "normal" usage of device into a network -> use this!
	* AP -> access point
	* Sniffer
	* reserverd
	* STA + AP -> WIFI_MODE_APSTA
	
- wifi driver initialization -> esp_wifi_init()
- setting interface/mode -> esp_wifi_set_mode(WIFI_MODE_STA)
- setting configuration -> esp_wifi_set_config(<mode>, <pointer to wifi_init_config_t structure>)
- start module -> esp_wifi_start()
- scan and connection -> esp_wifi_connect()
- disconnection -> esp_wifi_disconnect()
- stop and deinit phase -> esp_wifi_disconnect(), essp_wifi_stop(), esp_wifi_deinit()

- wifi_init_config_t structure -> fields to fill: .sta{.ssid = <ssid of wifi ap>, .password = <password of wifi ap>}

- important to handle events, program will be more reactive, no needed to wait fixed time -> generate a function for managing the events!
- events have id, with ESP_EVENT_ANY_ID is possible to catch all the events related to WIFI cathegory (WIFI_EVENT) without caring about the id

- netif is used for managing networks interfaces and events -> functions: esp_netif_init(), esp_event_loop_create_default()
